# sfuzz
# Autogenerated from man page /usr/man/man1/sfuzz.1.gz
complete -c sfuzz -s b -d 'Begin fuzzing at a particular permutation (test-case ID)'
complete -c sfuzz -s D -d 'Define a key:value pair.  This can be repeated any number of times'
complete -c sfuzz -s d -d 'Use Unix Datagram sockets NOTE: Support for this is experimental'
complete -c sfuzz -s e -d 'Stop fuzzing when an error is detected'
complete -c sfuzz -s f -d 'Configuration file, which contains the file format to use'
complete -c sfuzz -s h -d 'Prints help and exits'
complete -c sfuzz -s L -d 'Log to the specified file.  If filename doesn\'t exist, it will be created'
complete -c sfuzz -s l -d 'Only include \'literal\' fuzz strings (no sequences)'
complete -c sfuzz -s n -d 'Create a new log file ending with . id where id is the test id executed'
complete -c sfuzz -s O -d 'Log to standard output'
complete -c sfuzz -s p -d 'Connect to the port specified at port'
complete -c sfuzz -s q -d 'Quiet mode (not much information printed to standard out)'
complete -c sfuzz -s R -d 'Leak connections'
complete -c sfuzz -s r -d 'Trim newlines when sending data'
complete -c sfuzz -s S -d 'Hostname to which sfuzz will connect'
complete -c sfuzz -s s -d 'Only include \'sequence\' fuzz string (no literals)'
complete -c sfuzz -s T -d 'Use TCP sockets to connect'
complete -c sfuzz -s t -d 'Wait time between test cases, in milli-seconds'
complete -c sfuzz -s U -d 'Use UDP sockets to \'connect\' (send data)'
complete -c sfuzz -s u -d 'Use Unix stream sockets to connect'
complete -c sfuzz -s V -d 'Print version and exit'
complete -c sfuzz -s v -d 'Set output to be VERBOSE'
complete -c sfuzz -s X -d 'Print responses as ascii-hex DIAGNOSTICS'

